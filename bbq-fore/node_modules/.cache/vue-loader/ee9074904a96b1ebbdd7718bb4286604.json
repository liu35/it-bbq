{"remainingRequest":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\src\\views\\AdminLoginLog.vue?vue&type=style&index=0&id=e2569a80&scoped=true&lang=css&","dependencies":[{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\src\\views\\AdminLoginLog.vue","mtime":1665485286434},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\css-loader\\dist\\cjs.js","mtime":1665485282017},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1665485285949},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\postcss-loader\\src\\index.js","mtime":1665485284702},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665485281075},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1665485285948}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm1wYWdlIHsNCiAgbWFyZ2luOiAwIGF1dG87DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["AdminLoginLog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA","file":"AdminLoginLog.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"mcontaner\">\r\n    <AdminHeader> </AdminHeader>\r\n    <div class=\"block\">\r\n      <el-table\r\n          :data=\"loginLogs\"\r\n          stripe\r\n          style=\"width: 100%\">\r\n        <el-table-column\r\n            prop=\"id\"\r\n            label=\"id\"\r\n            width=\"50\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"userId\"\r\n            label=\"user id\"\r\n            width=\"100\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"userName\"\r\n            label=\"user name\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"userRole\"\r\n            label=\"user role\">\r\n        </el-table-column>\r\n        <el-table-column\r\n            prop=\"loginTime\"\r\n            label=\"login time\">\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <el-pagination class=\"mpage\" background layout=\"prev, pager, next\" :current-page=\"currentPage\"\r\n                     :page-size=\"pageSize\" :total=\"total\" @current-change=page>\r\n      </el-pagination>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport AdminHeader from \"@/components/AdminHeader\";\r\nimport {MessageBox} from \"element-ui\";\r\nexport default {\r\n  name: \"AdminLoginLog\",\r\n  components: {AdminHeader},\r\n  data() {\r\n    return {\r\n      loginLogs: [],\r\n      currentPage: 1,\r\n      total: 0,\r\n      pageSize: 10\r\n    }\r\n  },\r\n  methods: {\r\n    page(currentPage) {\r\n      const _this = this\r\n\r\n      _this.$axios.get(\"/user/admin/loginLog?pageNum=\" + currentPage).then(res => {\r\n        console.log(res)\r\n        _this.loginLogs = res.data.data.records\r\n        _this.currentPage = res.data.data.current\r\n        _this.total = res.data.data.total\r\n        _this.pageSize = res.data.data.size\r\n\r\n      })\r\n    },\r\n    setAdmin(userId) {\r\n      const _this = this\r\n      _this.$axios.get(\"/user/admin/role/set?userId=\"+userId+'&role=ADMIN').then(res => {\r\n        MessageBox.alert(\"set admin success\", 'success', {\r\n          confirmButtonText: 'ok',\r\n        });\r\n        _this.page(_this.currentPage)\r\n      })\r\n    },\r\n    setUser(userId) {\r\n      const _this = this\r\n      _this.$axios.get(\"/user/admin/role/set?userId=\"+userId+'&role=USER').then(res => {\r\n        MessageBox.alert(\"set user success\", 'success', {\r\n          confirmButtonText: 'ok',\r\n        });\r\n        _this.page(_this.currentPage)\r\n      })\r\n    },\r\n    setDisabled(userId) {\r\n      const _this = this\r\n      _this.$axios.get(\"/user/admin/disable?userId=\"+userId).then(res => {\r\n        MessageBox.alert(\"set the user disabled success\", 'success', {\r\n          confirmButtonText: 'ok',\r\n        });\r\n        _this.page(_this.currentPage)\r\n      })\r\n    },\r\n    setEnabled(userId) {\r\n      const _this = this\r\n      _this.$axios.get(\"/user/admin/enable?userId=\"+userId).then(res => {\r\n        MessageBox.alert(\"set the user enabled success\", 'success', {\r\n          confirmButtonText: 'ok',\r\n        });\r\n        _this.page(_this.currentPage)\r\n      })\r\n    },\r\n  },\r\n  created() {\r\n    this.page(1)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.mpage {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n}\r\n</style>"]}]}