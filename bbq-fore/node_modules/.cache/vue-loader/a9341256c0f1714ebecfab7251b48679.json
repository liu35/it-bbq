{"remainingRequest":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\src\\views\\PostsIndexEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\src\\views\\PostsIndexEdit.vue","mtime":1665741728188},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665485281075},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1665485280411},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665485281075},{"path":"D:\\项目\\bbq1\\new_bbq_code\\bbq-fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1665485285948}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgSGVhZGVyIGZyb20gIi4uL2NvbXBvbmVudHMvSGVhZGVyIjsNCmltcG9ydCB7TWVzc2FnZUJveH0gZnJvbSAiZWxlbWVudC11aSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIlBvc3RzSW5kZXhFZGl0IiwNCiAgY29tcG9uZW50czogeyBIZWFkZXIgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgcnVsZUZvcm06IHsNCiAgICAgICAgaWQ6ICcnLA0KICAgICAgICB0aXRsZTogJycsDQogICAgICAgIHR5cGVJZDogJycsDQogICAgICAgIG1hcmtkb3duQ29udGVudDogJycsDQogICAgICAgIGh0bWxDb250ZW50OiAnJywNCiAgICAgICAgY2F0ZWdvcnk6ICdBUlRJQ0xFJw0KICAgICAgfSwNCiAgICAgIHJ1bGVzOiB7DQogICAgICAgIHRpdGxlOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ3BsZWFzZSBlbnRlciB0aXRpbGUnLCB0cmlnZ2VyOiAnYmx1cicgfQ0KICAgICAgICBdLA0KICAgICAgICBodG1sQ29udGVudDogWw0KICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAncGxlYXNlIGVudGVyIHRoZSBzaG9ydCBzdW1tYXJ5JywgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgXSwNCiAgICAgICAgbWFya2Rvd25Db250ZW50OiBbDQogICAgICAgICAgeyB0cmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICdwbGVhc2UgZW50ZXIgY29udGVudCcsIHRyaWdnZXI6ICdibHVyJyB9DQogICAgICAgIF0NCiAgICAgIH0sDQogICAgICB0eXBlTGlzdDogW10NCiAgICB9Ow0KICB9LA0KICBtZXRob2RzOiB7DQogICAgc3VibWl0Rm9ybShmb3JtTmFtZSkgew0KICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUoKHZhbGlkKSA9PiB7DQogICAgICAgIGlmICh2YWxpZCkgew0KDQogICAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzDQogICAgICAgICAgdGhpcy4kYXhpb3MucG9zdCgnL3Bvc3RzL2luZGV4L2VkaXQnLCB0aGlzLnJ1bGVGb3JtLCB7DQogICAgICAgICAgICBoZWFkZXJzOiB7DQogICAgICAgICAgICAgICJBdXRob3JpemF0aW9uIjogbG9jYWxTdG9yYWdlLmdldEl0ZW0oInRva2VuIikNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpDQogICAgICAgICAgICBfdGhpcy4kYWxlcnQoJ29wZXJhdGUgc3VjY2Vzc2Z1bCcsICdub3RpY2UnLCB7DQogICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnT0snLA0KICAgICAgICAgICAgICBjYWxsYmFjazogYWN0aW9uID0+IHsNCiAgICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goIi9wb3N0cy9pbmRleCIpDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgfSkNCg0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpOw0KICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgfSk7DQogICAgfSwNCiAgICByZXNldEZvcm0oZm9ybU5hbWUpIHsNCiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnJlc2V0RmllbGRzKCk7DQogICAgfSwNCiAgICBnZXRUeXBlTGlzdCgpIHsNCiAgICAgIHRoaXMuJGF4aW9zLmdldCgiL2FydGljbGUvdHlwZXMiKS50aGVuKHJlcyA9PiB7DQogICAgICAgIHRoaXMudHlwZUxpc3QgPSByZXMuZGF0YS5kYXRhDQogICAgICB9KQ0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICBpZiAoIXRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0VXNlci5pZCkgew0KICAgICAgTWVzc2FnZUJveC5hbGVydCgicGxlYXNlIGxvZ2luISIsICdub3RpY2UnLCB7DQogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnb2snLA0KICAgICAgICBjYWxsYmFjazogYWN0aW9uID0+IHsNCiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL2xvZ2luIikNCiAgICAgICAgfQ0KICAgICAgfSkNCg0KICAgIH0NCiAgICB0aGlzLmdldFR5cGVMaXN0KCk7DQogICAgY29uc3QgcG9zdElkID0gdGhpcy4kcm91dGUucGFyYW1zLnBvc3RJZA0KICAgIGNvbnNvbGUubG9nKHBvc3RJZCkNCiAgICBjb25zdCBfdGhpcyA9IHRoaXMNCg0KICAgIGlmIChwb3N0SWQpIHsNCiAgICAgIHRoaXMuJGF4aW9zLmdldCgnL3Bvc3RzL2luZGV4LycgKyBwb3N0SWQpLnRoZW4ocmVzID0+IHsNCiAgICAgICAgY29uc3QgcG9zdCA9IHJlcy5kYXRhLmRhdGENCiAgICAgICAgX3RoaXMucnVsZUZvcm0uaWQgPSBwb3N0LmlkDQogICAgICAgIF90aGlzLnJ1bGVGb3JtLnRpdGxlID0gcG9zdC50aXRsZQ0KICAgICAgICBfdGhpcy5ydWxlRm9ybS5odG1sQ29udGVudCA9IHBvc3QuaHRtbENvbnRlbnQNCiAgICAgICAgX3RoaXMucnVsZUZvcm0ubWFya2Rvd25Db250ZW50ID0gcG9zdC5tYXJrZG93bkNvbnRlbnQNCiAgICAgICAgX3RoaXMucnVsZUZvcm0udHlwZUlkID0gcG9zdC50eXBlSWQNCiAgICAgIH0pDQogICAgfQ0KDQogIH0NCn0NCg=="},{"version":3,"sources":["PostsIndexEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"PostsIndexEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <Header></Header>\r\n    <div class=\"m-content\">\r\n      <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"title\" prop=\"title\">\r\n          <el-input v-model=\"ruleForm.title\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"TL;DR\" prop=\"htmlContent\">\r\n          <el-input v-model=\"ruleForm.htmlContent\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"category\" prop=\"category\">\r\n          <template>\r\n            <el-select v-model=\"ruleForm.typeId\" placeholder=\"please select category\">\r\n              <el-option v-for=\"item in typeList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </template>\r\n        </el-form-item>\r\n        <el-form-item label=\"content\" prop=\"content\">\r\n          <mavon-editor v-model=\"ruleForm.markdownContent\" language=\"en\"></mavon-editor>\r\n        </el-form-item>\r\n        <el-form-item style=\"text-align: center;\">\r\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Post</el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">Reset</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"../components/Header\";\r\nimport {MessageBox} from \"element-ui\";\r\n\r\nexport default {\r\n  name: \"PostsIndexEdit\",\r\n  components: { Header },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: '',\r\n        title: '',\r\n        typeId: '',\r\n        markdownContent: '',\r\n        htmlContent: '',\r\n        category: 'ARTICLE'\r\n      },\r\n      rules: {\r\n        title: [\r\n          { required: true, message: 'please enter titile', trigger: 'blur' }\r\n        ],\r\n        htmlContent: [\r\n        { required: true, message: 'please enter the short summary', trigger: 'blur' }\r\n        ],\r\n        markdownContent: [\r\n          { trequired: true, message: 'please enter content', trigger: 'blur' }\r\n        ]\r\n      },\r\n      typeList: []\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n\r\n          const _this = this\r\n          this.$axios.post('/posts/index/edit', this.ruleForm, {\r\n            headers: {\r\n              \"Authorization\": localStorage.getItem(\"token\")\r\n            }\r\n          }).then(res => {\r\n            console.log(res)\r\n            _this.$alert('operate successful', 'notice', {\r\n              confirmButtonText: 'OK',\r\n              callback: action => {\r\n                _this.$router.push(\"/posts/index\")\r\n              }\r\n            });\r\n\r\n          })\r\n\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    getTypeList() {\r\n      this.$axios.get(\"/article/types\").then(res => {\r\n        this.typeList = res.data.data\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    if (!this.$store.getters.getUser.id) {\r\n      MessageBox.alert(\"please login!\", 'notice', {\r\n        confirmButtonText: 'ok',\r\n        callback: action => {\r\n          this.$router.push(\"/login\")\r\n        }\r\n      })\r\n\r\n    }\r\n    this.getTypeList();\r\n    const postId = this.$route.params.postId\r\n    console.log(postId)\r\n    const _this = this\r\n\r\n    if (postId) {\r\n      this.$axios.get('/posts/index/' + postId).then(res => {\r\n        const post = res.data.data\r\n        _this.ruleForm.id = post.id\r\n        _this.ruleForm.title = post.title\r\n        _this.ruleForm.htmlContent = post.htmlContent\r\n        _this.ruleForm.markdownContent = post.markdownContent\r\n        _this.ruleForm.typeId = post.typeId\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n</script>"]}]}