{"remainingRequest":"D:\\github\\it-bbq\\bbq-fore\\node_modules\\babel-loader\\lib\\index.js!D:\\github\\it-bbq\\bbq-fore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\github\\it-bbq\\bbq-fore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\github\\it-bbq\\bbq-fore\\src\\views\\PostsIndexEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\github\\it-bbq\\bbq-fore\\src\\views\\PostsIndexEdit.vue","mtime":1665591918797},{"path":"D:\\github\\it-bbq\\bbq-fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665591855775},{"path":"D:\\github\\it-bbq\\bbq-fore\\node_modules\\babel-loader\\lib\\index.js","mtime":1665591855186},{"path":"D:\\github\\it-bbq\\bbq-fore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665591855775},{"path":"D:\\github\\it-bbq\\bbq-fore\\node_modules\\vue-loader\\lib\\index.js","mtime":1665591859958}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEhlYWRlciBmcm9tICIuLi9jb21wb25lbnRzL0hlYWRlciI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUG9zdHNJbmRleEVkaXQiLAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlcjogSGVhZGVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcnVsZUZvcm06IHsKICAgICAgICBpZDogJycsCiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIHR5cGVJZDogJycsCiAgICAgICAgbWFya2Rvd25Db250ZW50OiAnJywKICAgICAgICBodG1sQ29udGVudDogJycsCiAgICAgICAgY2F0ZWdvcnk6ICdBUlRJQ0xFJwogICAgICB9LAogICAgICBydWxlczogewogICAgICAgIHRpdGxlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAncGxlYXNlIGVudGVyIHRpdGlsZScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBodG1sQ29udGVudDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ3BsZWFzZSBlbnRlciBkZXNjcmlwdGlvbicsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBtYXJrZG93bkNvbnRlbnQ6IFt7CiAgICAgICAgICB0cmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAncGxlYXNlIGVudGVyIGNvbnRlbnQnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgdHlwZUxpc3Q6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShmb3JtTmFtZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdmFyIF90aGlzID0gX3RoaXMyOwoKICAgICAgICAgIF90aGlzMi4kYXhpb3MucG9zdCgnL3Bvc3RzL2luZGV4L2VkaXQnLCBfdGhpczIucnVsZUZvcm0sIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICJBdXRob3JpemF0aW9uIjogbG9jYWxTdG9yYWdlLmdldEl0ZW0oInRva2VuIikKICAgICAgICAgICAgfQogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgICBfdGhpcy4kYWxlcnQoJ29wZXJhdGUgc3VjY2Vzc2Z1bCcsICdub3RpY2UnLCB7CiAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdPSycsCiAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKGFjdGlvbikgewogICAgICAgICAgICAgICAgX3RoaXMuJHJvdXRlci5wdXNoKCIvcG9zdHMvaW5kZXgiKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgcmVzZXRGb3JtOiBmdW5jdGlvbiByZXNldEZvcm0oZm9ybU5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0ucmVzZXRGaWVsZHMoKTsKICAgIH0sCiAgICBnZXRUeXBlTGlzdDogZnVuY3Rpb24gZ2V0VHlwZUxpc3QoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kYXhpb3MuZ2V0KCIvYXJ0aWNsZS90eXBlcyIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMy50eXBlTGlzdCA9IHJlcy5kYXRhLmRhdGE7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0VHlwZUxpc3QoKTsKICAgIHZhciBwb3N0SWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMucG9zdElkOwogICAgY29uc29sZS5sb2cocG9zdElkKTsKCiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGlmIChwb3N0SWQpIHsKICAgICAgdGhpcy4kYXhpb3MuZ2V0KCcvcG9zdHMvaW5kZXgvJyArIHBvc3RJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIHBvc3QgPSByZXMuZGF0YS5kYXRhOwogICAgICAgIF90aGlzLnJ1bGVGb3JtLmlkID0gcG9zdC5pZDsKICAgICAgICBfdGhpcy5ydWxlRm9ybS50aXRsZSA9IHBvc3QudGl0bGU7CiAgICAgICAgX3RoaXMucnVsZUZvcm0uaHRtbENvbnRlbnQgPSBwb3N0Lmh0bWxDb250ZW50OwogICAgICAgIF90aGlzLnJ1bGVGb3JtLm1hcmtkb3duQ29udGVudCA9IHBvc3QubWFya2Rvd25Db250ZW50OwogICAgICAgIF90aGlzLnJ1bGVGb3JtLnR5cGVJZCA9IHBvc3QudHlwZUlkOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["PostsIndexEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <Header></Header>\r\n    <div class=\"m-content\">\r\n      <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"title\" prop=\"title\">\r\n          <el-input v-model=\"ruleForm.title\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"description\" prop=\"htmlContent\">\r\n          <el-input v-model=\"ruleForm.htmlContent\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"category\" prop=\"category\">\r\n          <template>\r\n            <el-select v-model=\"ruleForm.typeId\" placeholder=\"please select category\">\r\n              <el-option v-for=\"item in typeList\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </template>\r\n        </el-form-item>\r\n        <el-form-item label=\"content\" prop=\"content\">\r\n          <mavon-editor v-model=\"ruleForm.markdownContent\" language=\"en\"></mavon-editor>\r\n        </el-form-item>\r\n        <el-form-item style=\"text-align: center;\">\r\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Post</el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">Reset</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"../components/Header\";\r\nexport default {\r\n  name: \"PostsIndexEdit\",\r\n  components: { Header },\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        id: '',\r\n        title: '',\r\n        typeId: '',\r\n        markdownContent: '',\r\n        htmlContent: '',\r\n        category: 'ARTICLE'\r\n      },\r\n      rules: {\r\n        title: [\r\n          { required: true, message: 'please enter titile', trigger: 'blur' }\r\n        ],\r\n        htmlContent: [\r\n        { required: true, message: 'please enter description', trigger: 'blur' }\r\n        ],\r\n        markdownContent: [\r\n          { trequired: true, message: 'please enter content', trigger: 'blur' }\r\n        ]\r\n      },\r\n      typeList: []\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n\r\n          const _this = this\r\n          this.$axios.post('/posts/index/edit', this.ruleForm, {\r\n            headers: {\r\n              \"Authorization\": localStorage.getItem(\"token\")\r\n            }\r\n          }).then(res => {\r\n            console.log(res)\r\n            _this.$alert('operate successful', 'notice', {\r\n              confirmButtonText: 'OK',\r\n              callback: action => {\r\n                _this.$router.push(\"/posts/index\")\r\n              }\r\n            });\r\n\r\n          })\r\n\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    getTypeList() {\r\n      this.$axios.get(\"/article/types\").then(res => {\r\n        this.typeList = res.data.data\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.getTypeList();\r\n    const postId = this.$route.params.postId\r\n    console.log(postId)\r\n    const _this = this\r\n\r\n    if (postId) {\r\n      this.$axios.get('/posts/index/' + postId).then(res => {\r\n        const post = res.data.data\r\n        _this.ruleForm.id = post.id\r\n        _this.ruleForm.title = post.title\r\n        _this.ruleForm.htmlContent = post.htmlContent\r\n        _this.ruleForm.markdownContent = post.markdownContent\r\n        _this.ruleForm.typeId = post.typeId\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/views"}]}